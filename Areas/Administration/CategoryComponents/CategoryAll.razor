@page "/Administration/Category/All"
@inject ApplicationDbContext db
@using System.Linq
@using Microsoft.EntityFrameworkCore

@using INStudio.Data

@using Blazored.Toast
@using Blazored.Toast.Services
@inject IToastService toastService
@using System.Globalization
@* @typeparam TValue
    @inherits InputBase<TValue> *@

<div class="content-wrapper">
    <section class="content">
        <div class="row">

            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Категории</h3>

                        <div class="card-tools">
                            <div class="input-group input-group-sm" style="width: 150px;">
                                <input type="text" name="table_search" class="form-control float-right"
                                    placeholder="Search">

                                <div class="input-group-append">
                                    <button type="submit" class="btn btn-default"><i class="fas fa-search"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body table-responsive p-0">
                        <table class="table table-hover text-nowrap">
                            <thead>
                                <tr>
                                   <th>id</th>
                                    <th>Title</th>
                                    <th>Action</th>
                                    

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in @cList)
                                {
                                    <tr>
                                        <td>
                                            @item.Id
                                        </td>
                                        <td>
                                            @item.Title
                                        </td>


                                        <td>
                                            <a @onclick='() => DeleteItem(item.Id)'
                                                class="btn btn-outline-danger"><i class="far fa-trash-alt"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->

            </div>

        </div>
    </section>





    <section class="content">
        <div class="row">

            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Снимки в галерии</h3>

                        <div class="card-tools">
                            <div class="input-group input-group-sm" style="width: 150px;">
                                <input type="text" name="table_search" class="form-control float-right"
                                    placeholder="Search">

                                <div class="input-group-append">
                                    <button type="submit" class="btn btn-default"><i class="fas fa-search"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body table-responsive p-0">
                        <table class="table table-hover text-nowrap">
                            <thead>
                                <tr>

                                    <th>CategoryId</th>
                                    <th>ProjectId</th>
                                    
                                    <th>Action</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in @cpList)
                                {
                                    <tr>

                                        <td>
                                            @item.CategoryId
                                        </td>
                                        <td>
                                            @item.ProjectId
                                        </td>


                                        <td>
                                            <a @onclick='() => DeleteCP(item.CategoryId, item.ProjectId)'
                                                class="btn btn-outline-danger"><i class="far fa-trash-alt"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->

            </div>

        </div>
    </section>





    <section class="content">
        <div class="row">

            <div class="col-md-10">
                <!-- general form elements -->
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Опции</h3>
                    </div>
                    <!-- /.card-header -->
                    <!-- form start -->
                    <div class="card-body">
                        
                            <button type="button" class="btn btn-primary" @onclick="@(() => OpenModalFormAddMedia())">Добави CP </button>
                            <button type="button" class="btn btn-primary" @onclick="@(() => OpenModalForm())">Добави C </button>
                        
                    </div>


                    <div class="card-footer">
                        @* <button form="@pageId" type="submit" class="btn btn-success">Запиши</button> *@
                    </div>


                </div>
                <!-- /.card -->




            </div>
            <!-- /div col-6 /.col (left) -->


            <div class="col-md-2">
                <!-- general form elements disabled -->
                <div class="card card-warning">
                    <div class="card-header">
                        <h3 class="card-title">General Elements</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">



                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>


        </div>
    </section>
    <!-- /.content -->

    

   @if (showModalForm)
    {
        <div class="modal" tabindex="-1" ig="modal-ld" style="display:block" role="dialog">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Добави Медиа галерия</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <EditForm id="@pageId" Model="@cModel" OnSubmit="@HandleValidSubmit">
                            <ChildContent Context="another_name">
                                <DataAnnotationsValidator />
                                <div class="card-body">
                                    <div class="form-group">
                                        <label for="giToAdd.Title">Id</label>
                                        <InputText class="form-control" @bind-Value="cModel.Title" />
                                    </div>
                                    
                                    
                                    <button type="submit" class="btn btn-success">Save</button>

                                </div>
                                <!-- /.card-body -->
                            </ChildContent>
                        </EditForm>
                    </div>
                    <div class="modal-footer justify-content-between">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal"
                            @onclick="() => CloseModalForm()">Затвори</button>
                            <button form="@pageId" type="submit" class="btn btn-success">Запиши</button>

                    </div>
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>
        <!-- /.modal -->
    }


    @if (showModalFormAddMedia)
    {
        <div class="modal" tabindex="-1" ig="modal-ld" style="display:block" role="dialog">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Добави Медиа галерия</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <EditForm id="@pageId" Model="@cp" OnSubmit="@HandleValidSubmitCP">
                            <ChildContent Context="another_name">
                                <DataAnnotationsValidator />
                                <div class="card-body">
                                    <div class="form-group">
                                        <label for="cp.CategoryId">Idc</label>
                                        <InputText class="form-control" @bind-Value="cp.CategoryId" />
                                    </div>
                                    <div class="form-group">
                                        <label for="cp.ProjectId">Idp</label>
                                        <InputText class="form-control" @bind-Value="cp.ProjectId" />
                                    </div>
                                    
                                    <button type="submit" class="btn btn-success">Save</button>

                                </div>
                                <!-- /.card-body -->
                            </ChildContent>
                        </EditForm>
                    </div>
                    <div class="modal-footer justify-content-between">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal"
                            @onclick="() => CloseModalFormAddMedia()">Затвори</button>
                            <button form="@pageId" type="submit" class="btn btn-success">Запиши</button>

                    </div>
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>
        <!-- /.modal -->
    }


    


</div>



@code
{
    string pageId = "abv";
    bool showModal = false;
    bool showModalForm = false;
    bool showModalFormAddMedia = false;
    string Message = "Не са избрани файлове.";
    private HashSet<Image> mediaList = new HashSet<Image>();
    //private HashSet<Gallery> galeryList = new HashSet<Gallery>();
    private HashSet<Category> cList = new HashSet<Category>();
        private CategoryProject cp = new CategoryProject();
    private HashSet<CategoryProject> cpList = new HashSet<CategoryProject>();

    private Category cModel = new Category();

    IReadOnlyList<IBrowserFile> selectedFiles;

    //[Parameter]
    //public TValue SelectedValue { get; set; }

    private Gallery galeryModel = new Gallery();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        cList = this.db.Category.ToHashSet();
        cpList = this.db.CategoryProjects.Include(c => c.Category).Include(p => p.Project).ToHashSet();
        

        StateHasChanged();
    }

    

    async void HandleValidSubmit(EditContext editContext)
    {
        this.db.Category.Add(cModel);
        this.db.SaveChanges();
        StateHasChanged();
    }


    async void HandleValidSubmitCP(EditContext editContext)
    {
        
        
        this.db.CategoryProjects.Add(cp);
        this.db.SaveChanges();
        
        
        StateHasChanged();
    }

    void DeleteItem(string id)
    {
        this.db.Category.FirstOrDefault(x => x.Id == id);
        this.db.SaveChanges();
        StateHasChanged();
    }

    void DeleteCP(string catId, string projId)
    {
        CategoryProject catProj = this.db.CategoryProjects.First(x => x.CategoryId == catId && x.ProjectId == projId);
        this.db.CategoryProjects.Remove(catProj);
        this.db.SaveChanges();



        
        StateHasChanged();
    }


    void OpenModal()
    {
        showModal = true;
        StateHasChanged();
    }

    void CloseModal()
    {
        showModal = false;
        StateHasChanged();
    }

    void OpenModalForm()
    {
        showModalForm = true;
        StateHasChanged();
    }

    void CloseModalForm()
    {
        showModalForm = false;
        StateHasChanged();
    }

    void OpenModalFormAddMedia()
    {
        showModalFormAddMedia = true;
        StateHasChanged();
    }

    void CloseModalFormAddMedia()
    {
        showModalFormAddMedia = false;
        StateHasChanged();
    }

    //string GetMedia(string id)
    //{
    // string path = this.mediaList.FirstOrDefault(x => x.Id == id).Url;
    //
    // return path;
    //}
    //void GetAllMedias()
    //{
    // this.mediaList = db.Images.ToHashSet();
    //}
}