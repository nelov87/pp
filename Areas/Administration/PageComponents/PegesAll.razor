@page "/Administration/Page/All"
@inject IPageService pageService
@inject ApplicationDbContext db
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment env
@using Microsoft.EntityFrameworkCore
@using Blazored.Toast
@using Blazored.Toast.Services
@inject IToastService toastService


<div class="content-wrapper">
    <section class="content">
        <div class="row">

          <div class="col-12">
            <div class="card">
              <div class="card-header">
                <h3 class="card-title">About Skils</h3>

                <div class="card-tools">
                  <div class="input-group input-group-sm" style="width: 150px;">
                    <input type="text" name="table_search" class="form-control float-right" placeholder="Search">

                    <div class="input-group-append">
                      <button type="submit" class="btn btn-default"><i class="fas fa-search"></i></button>
                    </div>
                  </div>
                </div>
              </div>
              <!-- /.card-header -->
              <div class="card-body table-responsive p-0">
                <table class="table table-hover text-nowrap">
                  <thead>
                    <tr>
                      <th>Title</th>
                      <th>Description</th>
                      
                      <th>Action</th>
                      
                    </tr>
                  </thead>
                  <tbody>
                    @foreach (var item in @pageList)
                    {
                        <tr>
                            
                            <td>
                                @item.Title
                            </td>
                            <td>
                                @item.Content
                            </td>
                            
                            <td>
                                <a @onclick='() => EditItem(item.Id)' class="btn btn-outline-info"><i class="fas fa-pencil-alt"></i></a>
                                <AuthorizeView>
                                    <Authorized>
                                        @if (@context.User.IsInRole(ADMINISTRATION_ROLE))
                                            {
                                                <a @onclick='() => DeleteItem(item.Id)' class="btn btn-outline-danger"><i class="far fa-trash-alt"></i></a>
                                            }
                                    </Authorized>
                                </AuthorizeView>
                                
                            </td>
                        </tr>
                    }
                  </tbody>
                </table>
              </div>
              <!-- /.card-body -->
            </div>
            <!-- /.card -->
            
          </div>
        
        </div>
    </section>


    


    





</div>











@code
{
string pageId = "abv";
bool showModal = false;
private HashSet<Page> pageList;
  private Page pageModel;
  string ADMINISTRATION_ROLE = "Administrators";

void GetAllMedias()
{
  @* this.mediaList = db.INMedias.ToHashSet(); *@
}
    protected override void OnInitialized()
        {
            base.OnInitialized();
            
            
            pageList = this.pageService.GetPages().ToHashSet();
            pageModel = new Page();
            StateHasChanged();
        }

  
  
  

  void DeleteItem(string id)
  {
    bool operationOk = this.pageService.DeletePage(id);

    if (operationOk)
        {
            toastService.ShowToast(ToastLevel.Success, "Deleted Sucsesfuly!");
        }
        else
        {
            toastService.ShowToast(ToastLevel.Error, "Not deleted!");
        }

    pageList = this.pageService.GetPages().ToHashSet();
    
    StateHasChanged();
  }


  
   

    void EditItem(string id)
    {
        navigationManager.NavigateTo($"/Administration/Page/Edit/{id}");
        StateHasChanged();
    }

    
  
}    