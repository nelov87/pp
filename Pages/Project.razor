@page "/Project/{id}"
@using INStudio.Data
@inject IProjectService projectService
@layout INStudio.Pages.InnerSiteLayout
@inject INStudio.Services.IImageService imageService

<style>
    div.gallery {
        margin: 5px;
        border: 1px solid #ccc;
        float: left;
        width: 180px;
    }

    div.gallery:hover {
        border: 1px solid #777;
    }

    div.gallery img {
        width: 100%;
        height: auto;
    }

    div.desc {
        padding: 15px;
        text-align: center;
    }
</style>

<div class="back_re">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="title">
                    <h2>@projectModel.Title</h2>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- about -->
<div class="about">
    <div class="container-fluid">
        <div class="row d_flex">
            <div class="col-md-7">
                <div class="titlepage">
                    <h2>@projectModel.Title</h2>
                    <span>@((MarkupString)projectModel.Description)</span>

                </div>
            </div>
            <div class="col-md-5">
                <div class="about_img">
                    <video width="100%" poster="@GetThumbnail()" height="100%" controls>
                        <source src="@GetVideo()" type="video/mp4">

                        Your browser does not support the video tag.
                    </video>

                </div>
            </div>
        </div>



<div class="row d_flex">

    @if (projectModel.Gallery.GalleryImages.Count > 0)
    {
        <div class="container">

                    <h1 class="font-weight-light text-center text-lg-left mt-4 mb-0">Снимки</h1>

                    <hr class="mt-2 mb-5">

                    <div class="row text-center text-lg-left">
        @foreach (Image image in SavedImages.Where(x => !x.Url.EndsWith(".mp4")))
        {
            <div class="col-lg-3 col-md-4 col-6">
                <img src="@image.Url" onclick="openModal();currentSlide(1)" class="hover-shadow img-thumbnail">
            </div>
            
        }
                    </div>
        </div>
    }


</div>

<!-- The Modal/Lightbox -->
<div id="myModal" class="modal">
  <span class="close cursor" onclick="closeModal()">&times;</span>
  <div class="modal-content">

    @if (projectModel.Gallery.GalleryImages.Count > 0)
    {
        @foreach (Image image in SavedImages.Where(x => !x.Url.EndsWith(".mp4")))
        {
            <div class="mySlides">
            <div class="numbertext"></div>
                <img src="@image.Url" style="width:100%; max-width:80%">
            </div>
            
            
        }
    }

    <!-- Next/previous controls -->
    <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
    <a class="next" onclick="plusSlides(1)">&#10095;</a>

    <!-- Caption text -->
    <div class="caption-container">
      <p id="caption"></p>
    </div>

    @* <!-- Thumbnail image controls -->
    @if (projectModel.Gallery.GalleryImages.Count > 0)
    {
        @foreach (Image image in SavedImages.Where(x => !x.Url.EndsWith(".mp4")))
        {
            <div class="column">
                <img class="demo" src="@image.Url" onclick="currentSlide(1)" alt="Nature">
            </div>
            
        }
    } *@
    

    
  </div>
</div>










        
    </div>
</div>
<!-- end about -->




@code {
    [Parameter]
    public string id { get; set; }

    private INStudio.Data.Project projectModel;

    private HashSet<Image> SavedImages;

    private HashSet<Image> GetImages(HashSet<GalleryImage> galleryImages)
    {
        return this.imageService.GetImagesByGaleryImage(galleryImages);

    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (!this.projectService.IsProjectExist(id))
        {

            this.navigationManager.NavigateTo("/Projects");
        }
        projectModel = this.projectService.GetProject(id);
        if (projectModel.Gallery != null)
        {
            if (projectModel.Gallery.GalleryImages != null)
            {
                this.SavedImages = GetImages(projectModel.Gallery.GalleryImages.ToHashSet());
            }
        }


    }

    protected string GetVideo()
    {
        string videoUrl = this.SavedImages.FirstOrDefault(x => x.Url.EndsWith(".mp4")).Url;
        return videoUrl;
    }

    protected string GetThumbnail()
    {
        string videoThumb = GetVideo();
        videoThumb = videoThumb.Replace(".mp4", ".png");
        return videoThumb;
    }
}
